local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

--// Settings
local Aimbot = {
    Enabled = true,
    Toggle = false,
    Running = false,
    Locked = nil,
    LockPart = "Head",
    LockMode = 1, 
    Sensitivity = 0.1,
    Sensitivity2 = 3.5,
    TriggerKey = Enum.KeyCode.R, -- Default to R
    TeamCheck = true,
    WallCheck = true,
    SwitchCooldown = 0.25,
}

local LastSwitch = 0

local function GetClosestTarget()
    local closest, shortest = nil, math.huge
    local mouse = UserInputService:GetMouseLocation()

    for _, player in ipairs(Players:GetPlayers()) do
        if player == LocalPlayer or not player.Character then continue end

        local char = player.Character
        local humanoid = char:FindFirstChildOfClass("Humanoid")
        local part = char:FindFirstChild(Aimbot.LockPart)

        if not humanoid or humanoid.Health <= 0 or not part then continue end
        if Aimbot.TeamCheck and player.Team == LocalPlayer.Team then continue end

        -- wall check (camera visibility)
        if Aimbot.WallCheck then
            local ignore = {}
            for _, v in ipairs(LocalPlayer.Character:GetDescendants()) do table.insert(ignore, v) end
            for _, v in ipairs(char:GetDescendants()) do table.insert(ignore, v) end
            local parts = Camera:GetPartsObscuringTarget({part.Position}, ignore)
            if #parts > 0 then continue end
        end

        -- screen-space distance to mouse (better than world distance)
        local screenPos, onScreen = Camera:WorldToViewportPoint(part.Position)
        if not onScreen then continue end
        local dist = (mouse - Vector2.new(screenPos.X, screenPos.Y)).Magnitude

        if dist < shortest then
            closest = player
            shortest = dist
        end
    end

    if closest then
        Aimbot.Locked = closest
    end
end

local function AimAt()
    if not Aimbot.Enabled or not Aimbot.Running then return end

    GetClosestTarget()
    local target = Aimbot.Locked
    if not target or not target.Character then return end

    local char = target.Character
    local part = char:FindFirstChild(Aimbot.LockPart)
    local humanoid = char:FindFirstChildOfClass("Humanoid")

    if not part or not humanoid or humanoid.Health <= 0 then
        Aimbot.Locked = nil
        return
    end

    -- smooth bullet drop curve that starts after ~25 studs
    local distance = (Camera.CFrame.Position - part.Position).Magnitude
    local dropY = distance > 25 and math.clamp((distance ^ 1.15) * 0.0025, 0, 10) or 0
    local aimPos = part.Position + Vector3.new(0, dropY, 0)

    if Aimbot.LockMode == 2 then
        local screen = Camera:WorldToViewportPoint(aimPos)
        local mousePos = UserInputService:GetMouseLocation()
        mousemoverel((screen.X - mousePos.X) / Aimbot.Sensitivity2, (screen.Y - mousePos.Y) / Aimbot.Sensitivity2)
    else
        if Aimbot.Sensitivity > 0 then
            TweenService:Create(Camera, TweenInfo.new(Aimbot.Sensitivity), {
                CFrame = CFrame.new(Camera.CFrame.Position, aimPos)
            }):Play()
        else
            Camera.CFrame = CFrame.new(Camera.CFrame.Position, aimPos)
        end
    end
end

UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Aimbot.TriggerKey then
        if Aimbot.Toggle then
            Aimbot.Running = not Aimbot.Running
            if not Aimbot.Running then Aimbot.Locked = nil end
        else
            Aimbot.Running = true
        end
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if Aimbot.Toggle then return end
    if input.KeyCode == Aimbot.TriggerKey then
        Aimbot.Running = false
        Aimbot.Locked = nil
    end
end)

RunService.RenderStepped:Connect(AimAt)
return Aimbot
