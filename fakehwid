local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local Aimbot = {
    Enabled = true,
    Toggle = false,
    Running = false,
    Locked = nil,
    LockPart = "Head",
    LockMode = 1,
    Sensitivity = 0.1,
    Sensitivity2 = 3.5,
    TriggerKey = Enum.KeyCode.R,
    TeamCheck = true,
    WallCheck = true,
    SwitchCooldown = 0.25,
    _lastSwitch = 0
}


local function isNumeric(str)
    return tonumber(str) ~= nil
end

local function getAllTargets()
    local targets = {}

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            table.insert(targets, {
                Character = player.Character,
                Team = player.Team,
                IsBot = false,
                Player = player
            })
        end
    end

    local botFolder = workspace:FindFirstChild("__THINGS") and workspace.__THINGS:FindFirstChild("__ENTITIES")
    if botFolder then
        for _, model in ipairs(botFolder:GetChildren()) do
            if model:IsA("Model") and isNumeric(model.Name) then
                table.insert(targets, {
                    Character = model,
                    Team = nil,
                    IsBot = true,
                    Player = nil
                })
            end
        end
    end

    return targets
end

Aimbot.GetClosestPlayer = function()
    local mouse = UserInputService:GetMouseLocation()
    local closest, shortest = nil, math.huge

    for _, data in ipairs(getAllTargets()) do
        local char = data.Character
        local humanoid = char:FindFirstChildOfClass("Humanoid")
        local part = char:FindFirstChild(Aimbot.LockPart)

        if not part or not humanoid or humanoid.Health <= 0 then continue end

        if not data.IsBot and Aimbot.TeamCheck then
            if LocalPlayer.Team and data.Team and LocalPlayer.Team == data.Team then
                continue
            end
        end

        if Aimbot.WallCheck then
            local ignore = {}
            for _, v in ipairs((LocalPlayer.Character or {}):GetDescendants()) do table.insert(ignore, v) end
            for _, v in ipairs(char:GetDescendants()) do table.insert(ignore, v) end
            if #Camera:GetPartsObscuringTarget({part.Position}, ignore) > 0 then continue end
        end

        -- Crosshair/FOV targeting
        local screenPos, visible = Camera:WorldToViewportPoint(part.Position)
        if not visible then continue end

        local dist = (mouse - Vector2.new(screenPos.X, screenPos.Y)).Magnitude
        if dist < shortest then
            closest = data
            shortest = dist
        end
    end

    if closest and tick() - Aimbot._lastSwitch >= Aimbot.SwitchCooldown then
        Aimbot.Locked = closest
        Aimbot._lastSwitch = tick()
    end
end

local function AimAt()
    if not Aimbot.Enabled or not Aimbot.Running then return end

    Aimbot.GetClosestPlayer()
    local target = Aimbot.Locked
    if not target or not target.Character then return end

    local char = target.Character
    local part = char:FindFirstChild(Aimbot.LockPart)
    local humanoid = char:FindFirstChildOfClass("Humanoid")
    if not part or not humanoid or humanoid.Health <= 0 then
        Aimbot.Locked = nil
        return
    end

    local distance = (Camera.CFrame.Position - part.Position).Magnitude
    local dropY = 0
    if distance > 35 then
        dropY = math.clamp(math.log10(distance - 30) * 4.5, 0, 14)
    end

    local aimPos = part.Position + Vector3.new(0, dropY, 0)

    if Aimbot.LockMode == 2 then
        local screen = Camera:WorldToViewportPoint(aimPos)
        local mousePos = UserInputService:GetMouseLocation()
        mousemoverel((screen.X - mousePos.X) / Aimbot.Sensitivity2, (screen.Y - mousePos.Y) / Aimbot.Sensitivity2)
    else
        if Aimbot.Sensitivity > 0 then
            TweenService:Create(Camera, TweenInfo.new(Aimbot.Sensitivity), {
                CFrame = CFrame.new(Camera.CFrame.Position, aimPos)
            }):Play()
        else
            Camera.CFrame = CFrame.new(Camera.CFrame.Position, aimPos)
        end
    end
end

UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Aimbot.TriggerKey then
        if Aimbot.Toggle then
            Aimbot.Running = not Aimbot.Running
            if not Aimbot.Running then Aimbot.Locked = nil end
        else
            Aimbot.Running = true
        end
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if Aimbot.Toggle then return end
    if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Aimbot.TriggerKey then
        Aimbot.Running = false
        Aimbot.Locked = nil
    end
end)

LocalPlayer.CharacterAdded:Connect(function()
    Aimbot.Locked = nil
end)

RunService.RenderStepped:Connect(AimAt)
return Aimbot
