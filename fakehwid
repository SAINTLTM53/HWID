local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer
local Camera = Workspace.CurrentCamera

local Aimbot = {
    Enabled = true,
    Toggle = false,
    Running = false,
    Locked = nil,
    LockPart = "Head",
    LockMode = 1,
    Sensitivity = 0.1,
    Sensitivity2 = 3.5,
    TriggerKey = Enum.KeyCode.R,
    TeamCheck = true,
    WallCheck = true,
    SwitchCooldown = 0.25,
    _lastSwitch = 0
}

local function isBot(model)
    return model:IsA("Model") and tonumber(model.Name) ~= nil
end

local function getTargets()
    local targets = {}

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            table.insert(targets, {Type = "Player", Object = player})
        end
    end

    -- Add bots from __THINGS.__ENTITIES
    local botFolder = Workspace:FindFirstChild("__THINGS") and Workspace.__THINGS:FindFirstChild("__ENTITIES")
    if botFolder then
        for _, bot in ipairs(botFolder:GetChildren()) do
            if isBot(bot) and bot:FindFirstChildOfClass("Humanoid") and bot:FindFirstChild("HumanoidRootPart") then
                table.insert(targets, {Type = "Bot", Object = bot})
            end
        end
    end

    return targets
end

Aimbot.GetClosestPlayer = function()
    local mouse = UserInputService:GetMouseLocation()
    local closest, shortest = nil, math.huge

    for _, data in ipairs(getTargets()) do
        local char, humanoid, team
        local part = nil

        if data.Type == "Player" then
            local player = data.Object
            char = player.Character
            humanoid = char and char:FindFirstChildOfClass("Humanoid")
            team = player.Team
        else
            char = data.Object
            humanoid = char:FindFirstChildOfClass("Humanoid")
            team = nil
        end

        part = char and char:FindFirstChild(Aimbot.LockPart)

        if not char or not humanoid or humanoid.Health <= 0 or not part then continue end
        if Aimbot.TeamCheck and team and team == LocalPlayer.Team then continue end

        if Aimbot.WallCheck then
            local ignore = {}
            for _, v in ipairs(getCharacter():GetDescendants()) do table.insert(ignore, v) end
            for _, v in ipairs(char:GetDescendants()) do table.insert(ignore, v) end
            if #Camera:GetPartsObscuringTarget({part.Position}, ignore) > 0 then continue end
        end

        local screenPos, visible = Camera:WorldToViewportPoint(part.Position)
        if not visible then continue end

        local dist = (mouse - Vector2.new(screenPos.X, screenPos.Y)).Magnitude
        if dist < shortest then
            Aimbot.Locked = {
                Character = char,
                Humanoid = humanoid,
                Part = part
            }
            shortest = dist
        end
    end
end

local function AimAt()
    if not Aimbot.Enabled or not Aimbot.Running then return end
    Aimbot.GetClosestPlayer()

    local lock = Aimbot.Locked
    if not lock or not lock.Character or not lock.Humanoid or not lock.Part then return end
    if lock.Humanoid.Health <= 0 then
        Aimbot.Locked = nil
        return
    end

    local distance = (Camera.CFrame.Position - lock.Part.Position).Magnitude
    local dropY = distance > 7000000000000 and math.clamp(math.log10(distance - 7000000000000) * 5.2, 0, 13) or 0
    local aimPos = lock.Part.Position + Vector3.new(0, dropY, 0)

    if Aimbot.LockMode == 2 then
        local screen = Camera:WorldToViewportPoint(aimPos)
        local mousePos = UserInputService:GetMouseLocation()
        mousemoverel((screen.X - mousePos.X) / Aimbot.Sensitivity2, (screen.Y - mousePos.Y) / Aimbot.Sensitivity2)
    else
        if Aimbot.Sensitivity > 0 then
            TweenService:Create(Camera, TweenInfo.new(Aimbot.Sensitivity), {
                CFrame = CFrame.new(Camera.CFrame.Position, aimPos)
            }):Play()
        else
            Camera.CFrame = CFrame.new(Camera.CFrame.Position, aimPos)
        end
    end
end

UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Aimbot.TriggerKey then
        if Aimbot.Toggle then
            Aimbot.Running = not Aimbot.Running
            if not Aimbot.Running then Aimbot.Locked = nil end
        else
            Aimbot.Running = true
        end
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if not Aimbot.Toggle and input.KeyCode == Aimbot.TriggerKey then
        Aimbot.Running = false
        Aimbot.Locked = nil
    end
end)

LocalPlayer.CharacterAdded:Connect(function()
    Aimbot.Locked = nil
end)

RunService.RenderStepped:Connect(AimAt)
return Aimbot
